buildscript {
    repositories {
        google()
        mavenCentral()
        jcenter()
        mavenLocal()
        maven { url 'https://dl.bintray.com/kotlin/kotlin-dev' }
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
        maven { url "https://dl.bintray.com/jetbrains/kotlin-native-dependencies" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-frontend-plugin:0.0.37"
        classpath group: 'net.rubygrapefruit', name: 'native-platform', version: '0.21'
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4-jetbrains-3"
    }
}

plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.3.41'
}

apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

repositories {
    mavenCentral()
}

group project.groupId
version project.kyugaVersion

kotlin {

    targets {
        final def iOSTarget = System.getenv('SDK_NAME')?.startsWith("iphoneos") \
                              ? presets.iosArm64 : presets.iosX64

        fromPreset(iOSTarget, 'ios') {
            binaries {
                framework('KyugaIOS')
            }
        }

        fromPreset(presets.jvm, 'android')
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation(kotlin("stdlib-common"))
            }
        }

        commonTest.dependencies {
            implementation "org.jetbrains.kotlin:kotlin-test-common"
            implementation "org.jetbrains.kotlin:kotlin-test-annotations-common"
        }

        androidMain {
            dependencies {
                implementation(kotlin("stdlib"))
            }
        }

        androidTest {
            kotlin {
                srcDir 'src/androidTest/kotlin'
            }
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-test-common"
                implementation "org.jetbrains.kotlin:kotlin-test-annotations-common"
                implementation "org.jetbrains.kotlin:kotlin-test-junit"
                implementation "org.jetbrains.kotlin:kotlin-test"
                implementation "org.json:json:20090211"
            }

            dependsOn commonMain
            dependsOn androidMain
        }

        iosMain.dependencies {
        }
    }
}

configurations {
    compileClasspath
}

task packForXcode(type: Sync) {
    final File frameworkDir = new File(buildDir, "xcode-frameworks")
    final String mode = project.findProperty("XCODE_CONFIGURATION")?.toUpperCase() ?: 'DEBUG'
    final def framework = kotlin.targets.ios.binaries.getFramework("KyugaIOS", mode)

    inputs.property "mode", mode
    dependsOn framework.linkTask

    from { framework.outputFile.parentFile }
    into frameworkDir

    doLast {
        new File(frameworkDir, 'gradlew').with {
            text = "#!/bin/bash\nexport 'JAVA_HOME=${System.getProperty("java.home")}'\ncd '${rootProject.rootDir}'\n./gradlew \$@\n"
            setExecutable(true)
        }
    }
}

apply from: rootProject.file('pom.gradle')
apply from: rootProject.file('gradle/bintray.gradle')
apply from: rootProject.file('gradle/publish.gradle')

tasks.build.dependsOn packForXcode
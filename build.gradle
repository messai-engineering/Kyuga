import org.jetbrains.kotlin.gradle.tasks.FatFrameworkTask

buildscript {
    repositories {
        mavenLocal()
        google()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath group: 'net.rubygrapefruit', name: 'native-platform', version: '0.21'
        classpath 'com.codingfeline.buildkonfig:buildkonfig-gradle-plugin:0.9.0'
    }
}

apply plugin: 'maven-publish'
apply plugin: 'org.jetbrains.kotlin.multiplatform'
apply plugin: 'com.codingfeline.buildkonfig'

repositories {
    mavenCentral()
}

group project.groupId
version project.kyugaVersion

def frameworkName = "KyugaIOS"

kotlin {

    iosX64 {
        binaries.framework {
            baseName = frameworkName
        }
    }

    iosArm64 {
        binaries.framework {
            baseName = frameworkName
        }
    }

    iosArm32 {
        binaries.framework {
            baseName = frameworkName
        }
    }

    jvm('android')

    sourceSets {
        commonMain {
            dependencies {
                implementation(kotlin("stdlib-common"))
            }
        }

        commonTest.dependencies {
            implementation "org.jetbrains.kotlin:kotlin-test-common"
            implementation "org.jetbrains.kotlin:kotlin-test-annotations-common"
        }

        androidMain {
            dependencies {
                implementation(kotlin("stdlib"))
            }
        }

        androidTest {
            kotlin {
                srcDir 'src/androidTest/kotlin'
            }
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-test-common"
                implementation "org.jetbrains.kotlin:kotlin-test-annotations-common"
                implementation "org.jetbrains.kotlin:kotlin-test-junit"
                implementation "org.jetbrains.kotlin:kotlin-test"
                implementation "org.json:json:20090211"
            }

            dependsOn commonMain
            dependsOn androidMain
        }

        iosMain.dependencies {
        }

        iosMain {}
        iosArm64Main.dependsOn iosMain
        iosArm32Main.dependsOn iosMain
        iosX64Main.dependsOn iosMain

        iosTest {}
        iosArm64Test.dependsOn iosTest
        iosArm32Test.dependsOn iosTest
        iosX64Test.dependsOn iosTest
    }
}

configurations {
    compileClasspath
}

task fatFramework(type: FatFrameworkTask) {
    // The fat framework must have the same base name as the initial frameworks.
    baseName = "$frameworkName"
    // Specify the frameworks to be merged.
    from(
            kotlin.targets.iosX64.binaries.getFramework("RELEASE") ,
            kotlin.targets.iosArm64.binaries.getFramework("RELEASE"),
            kotlin.targets.iosArm32.binaries.getFramework("RELEASE")
    )
}

buildkonfig {
    packageName = 'com.example.app'
    // objectName = 'YourAwesomeConfig'
    // exposeObjectWithName = 'YourAwesomePublicConfig'

    defaultConfigs {
        buildConfigField 'STRING', 'isDebug', 'true'
    }
}

apply from: rootProject.file('pom.gradle')
apply from: rootProject.file('gradle/publish.gradle')

tasks.build.dependsOn fatFramework